This project exists to explore test-driven behavior development
    with a simple android java-based application.

This project is not a working android game.

The code is a product of using bdd to work towards building a virtual world, terrarium type

no gui except empty settings; focus is on unit tests, behavior specs

Using behavior driven development to build a virtual world from a growing list of needs.

This example shows separation of java classes into model and testable service classes.

    Models have state and carry properties; created with new; no behavior (except getters/setters)

    Services perform needed action on model objects; created with factories; behavior requires tests

    Lean, solid, and dry; only enough code to cover the needs, nothing more



** game world needs **


A game loop pumps each villager's think service many times per second.

During think, villagers

    find, eat, and collect food and other things

    use senses to check for danger and avoid

    plot movement from current point to a target point

    find shelter; find ways to build shelter

    look for other villagers

    villagers meet and trade with one another

    villagers craft goods

    villagers acquire good-will from other villagers; or lose it with bad behavior

    villagers farm, keep animals

    villagers develop regional identity

    regions of villagers cooperate or fight with neighboring regions




Specialized Villagers

    Hunters

    Gathers

    Tool Makers

    Builders

    Pottery, Baskets, Barrels

    Trappers

    Fishers

    Farmers

    Jewelers

    Metal Workers

    Miners

    Timber Cutters




